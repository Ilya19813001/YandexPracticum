SQL-проект Исследование данных об инвестиции венчурных фондов в компании-стартапы
Данные
В проекте работа идёт с базой данных, которая хранит информацию о венчурных фондах и инвестициях в компании-стартапы. 
Эта база данных основана на датасете Startup Investments, опубликованном на популярной платформе для соревнований по исследованию данных Kaggle.

Задача
Проанализировать данные о фондах и инвестициях, произвести выгрузки данных и ответить на поставленные вопросы с помощью SQL.

Задания:
Задание 1
Посчитайте, сколько компаний закрылось.

SELECT 
       COUNT(status)
FROM company
WHERE status = 'closed'; 

Задание 2

Отобразите количество привлечённых средств для новостных компаний США. Используйте данные из таблицы company.
Отсортируйте таблицу по убыванию значений в поле funding_total .

SELECT funding_total
FROM company
WHERE category_code = 'news'
AND country_code = 'USA'
ORDER BY funding_total DESC;

Задание 3
Найдите общую сумму сделок по покупке одних компаний другими в долларах. Отберите сделки, которые осуществлялись только за наличные
с 2011 по 2013 год включительно.

SELECT SUM(price_amount)
FROM acquisition
WHERE term_code = 'cash'
AND acquired_at BETWEEN '2011-01-01' AND '2013-12-31';

Задание 4


Отобразите имя, фамилию и названия аккаунтов людей в твиттере, у которых названия аккаунтов начинаются на 'Silver'.

SELECT first_name,
       last_name,
       twitter_username
FROM people
WHERE twitter_username LIKE 'Silver%'

Задание 5

Для каждой страны отобразите общую сумму привлечённых инвестиций, которые получили компании, зарегистрированные в этой стране. 
Страну, в которой зарегистрирована компания, можно определить по коду страны. Отсортируйте данные по убыванию суммы.

SELECT country_code AS country,
       SUM(funding_total)
FROM company
GROUP BY country_code
ORDER BY SUM(funding_total) DESC;

Задание 6

Для каждой страны отобразите общую сумму привлечённых инвестиций, которые получили компании, зарегистрированные в этой стране. 
Страну, в которой зарегистрирована компания, можно определить по коду страны. Отсортируйте данные по убыванию суммы.

SELECT country_code AS country,
       SUM(funding_total)
FROM company
GROUP BY country_code
ORDER BY SUM(funding_total) DESC;

Задание 7

Составьте таблицу, в которую войдёт дата проведения раунда, а также минимальное и максимальное значения суммы инвестиций, привлечённых в эту дату.

SELECT funded_at,
       MIN(raised_amount),
       MAX(raised_amount)
FROM funding_round
GROUP BY funded_at
HAVING MIN(raised_amount) NOT IN (0,MAX(raised_amount));

Задание 8

SELECT id,
       name,
       founded_at,
       domain,
       twitter_username,
       country_code,
       investment_rounds,
       invested_companies,
       milestones,
       created_at, 
       updated_at,
       CASE
           WHEN invested_companies >= 100 THEN 'high_activity'
           WHEN invested_companies >= 20 AND invested_companies < 100 THEN 'middle_activity'
           WHEN invested_companies < 20 THEN 'low_activity'
        END

FROM fund;

Задание 9

Для каждой из категорий, назначенных в предыдущем задании, посчитайте округлённое до ближайшего целого числа среднее количество инвестиционных раундов,
в которых фонд принимал участие. Выведите на экран категории и среднее число инвестиционных раундов. Отсортируйте таблицу по возрастанию среднего.

SELECT 
       CASE
           WHEN invested_companies>=100 THEN 'high_activity'
           WHEN invested_companies>=20 THEN 'middle_activity'
           ELSE 'low_activity'
       END AS activity,
       ROUND(AVG(investment_rounds))
FROM fund
GROUP BY activity 
ORDER BY ROUND(AVG(investment_rounds));

Задание 10

Проанализируйте, в каких странах находятся фонды, которые чаще всего инвестируют в стартапы. 
Для каждой страны посчитайте минимальное, максимальное и среднее число компаний, в которые инвестировали фонды этой страны, основанные с 2010 по 2012 
год включительно. Исключите страны с фондами, у которых минимальное число компаний, получивших инвестиции, равно нулю. Выгрузите десять самых активных стран-инвесторов.
Отсортируйте таблицу по среднему количеству компаний от большего к меньшему, а затем по коду страны в лексикографическом порядке.

SELECT country_code,
       MIN(invested_companies),
       AVG(invested_companies),
       MAX(invested_companies)
FROM fund
WHERE founded_at BETWEEN '2010-01-01' AND '2012-12-31'

GROUP BY country_code
HAVING MIN(invested_companies) != 0
ORDER BY AVG(invested_companies) DESC,country_code

LIMIT 10;

Задание 11


Отобразите имя и фамилию всех сотрудников стартапов. Добавьте поле с названием учебного заведения, которое окончил сотрудник, если эта информация известна.

SELECT p.first_name,
       p.last_name,
       e.instituition
FROM people AS p
LEFT JOIN education AS e ON p.id = e.person_id 

Задание 12

Для каждой компании найдите количество учебных заведений, которые окончили её сотрудники. Выведите название компании и число уникальных названий учебных заведений. 
Составьте топ-5 компаний по количеству университетов.

SELECT c.name,
       COUNT(DISTINCT e.instituition)
FROM company AS c
LEFT OUTER JOIN people AS p ON c.id=p.company_id
INNER JOIN education AS e ON e.person_id=p.id
GROUP BY c.name
ORDER BY COUNT(DISTINCT e.instituition) DESC
LIMIT 5;

Задание 13

Составьте список с уникальными названиями закрытых компаний, для которых первый раунд финансирования оказался последним.

SELECT DISTINCT c.name
FROM funding_round AS fr
LEFT JOIN company AS c ON c.id= fr.company_id
WHERE fr.is_first_round = 1 AND fr.is_last_round = 1
AND c.status = 'closed'

Задание 14

Составьте список уникальных номеров сотрудников, которые работают в компаниях, отобранных в предыдущем задании.

SELECT DISTINCT p.id
FROM company AS c
INNER JOIN people AS p ON c.id = p.company_id
 INNER JOIN (SELECT DISTINCT c.name
FROM funding_round AS fr
LEFT JOIN company AS c ON c.id= fr.company_id
WHERE fr.is_first_round = 1 AND fr.is_last_round = 1
AND c.status = 'closed') AS unq_name ON unq_name.name = c.name

Задание 15

Составьте таблицу, куда войдут уникальные пары с номерами сотрудников из предыдущей задачи и учебным заведением, которое окончил сотрудник.

SELECT  DISTINCT unq_staff.id,
        e.instituition
FROM (SELECT DISTINCT p.id
      FROM company AS c
      INNER JOIN people AS p ON c.id = p.company_id
      INNER JOIN 
               (SELECT DISTINCT c.name
                FROM funding_round AS fr
                LEFT JOIN company AS c ON c.id= fr.company_id
                WHERE fr.is_first_round = 1 AND fr.is_last_round = 1
AND c.status = 'closed') AS unq_name ON unq_name.name = c.name) AS unq_staff
INNER JOIN education AS e ON unq_staff.id= e.person_id;

Задание 16


Посчитайте количество учебных заведений для каждого сотрудника из предыдущего задания.
При подсчёте учитывайте, что некоторые сотрудники могли окончить одно и то же заведение дважды.

SELECT  DISTINCT unq_staff.id,
        COUNT(e.instituition)
FROM (SELECT DISTINCT p.id
      FROM company AS c
      INNER JOIN people AS p ON c.id = p.company_id
      INNER JOIN 
               (SELECT DISTINCT c.name
                FROM funding_round AS fr
                LEFT JOIN company AS c ON c.id= fr.company_id
                WHERE fr.is_first_round = 1 AND fr.is_last_round = 1
AND c.status = 'closed') AS unq_name ON unq_name.name = c.name) AS unq_staff
INNER JOIN education AS e ON unq_staff.id= e.person_id
GROUP BY unq_staff.id;

Задание 17

Дополните предыдущий запрос и выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники разных компаний. 
Нужно вывести только одну запись, группировка здесь не понадобится.

SELECT AVG(inst_staff.count1)
FROM
(SELECT  DISTINCT unq_staff.id,
        COUNT(e.instituition) AS count1
FROM (SELECT DISTINCT p.id
      FROM company AS c
      INNER JOIN people AS p ON c.id = p.company_id
      INNER JOIN 
               (SELECT DISTINCT c.name
                FROM funding_round AS fr
                LEFT JOIN company AS c ON c.id= fr.company_id
                WHERE fr.is_first_round = 1 AND fr.is_last_round = 1
AND c.status = 'closed') AS unq_name ON unq_name.name = c.name) AS unq_staff
INNER JOIN education AS e ON unq_staff.id= e.person_id
GROUP BY unq_staff.id) AS inst_staff

Задание 18


Напишите похожий запрос: выведите среднее число учебных заведений (всех, не только уникальных), которые окончили сотрудники Facebook*.
*(сервис, запрещённый на территории РФ)

SELECT AVG(inst_staff.count1)
FROM
(SELECT unq_staff.id,
        COUNT(e.instituition) AS count1
FROM (SELECT DISTINCT p.id
      FROM company AS c
      INNER JOIN people AS p ON c.id = p.company_id
      INNER JOIN 
               (SELECT DISTINCT c.name
                FROM company AS c
                WHERE c.name = 'Facebook') AS fcb ON fcb.name = c.name) AS unq_staff
INNER JOIN education AS e ON unq_staff.id= e.person_id
GROUP BY unq_staff.id) AS inst_staff

Задание 19

Составьте таблицу из полей:
name_of_fund — название фонда;
name_of_company — название компании;
amount — сумма инвестиций, которую привлекла компания в раунде.
В таблицу войдут данные о компаниях, в истории которых было больше шести важных этапов, а раунды финансирования проходили с 2012 по 2013 год включительно.

SELECT f.name AS name_of_fund,
       c.name AS name_of_company,
       fr.raised_amount AS amount
FROM investment AS i 
FULL OUTER JOIN company AS c ON c.id=i.company_id
FULL OUTER JOIN fund AS f ON f.id=i.fund_id
FULL OUTER JOIN funding_round AS fr ON fr.id=i.funding_round_id
WHERE c.milestones > 6
AND fr.funded_at BETWEEN '2012-01-01' AND '2013-12-31';

Задание 20

Выгрузите таблицу, в которой будут такие поля:
название компании-покупателя;
сумма сделки;
название компании, которую купили;
сумма инвестиций, вложенных в купленную компанию;
доля, которая отображает, во сколько раз сумма покупки превысила сумму вложенных в компанию инвестиций, округлённая до ближайшего целого числа.
Не учитывайте те сделки, в которых сумма покупки равна нулю. Если сумма инвестиций в компанию равна нулю, исключите такую компанию из таблицы. 
Отсортируйте таблицу по сумме сделки от большей к меньшей, а затем по названию купленной компании в лексикографическом порядке. Ограничьте таблицу первыми десятью записями.

SELECT c.name AS name_buyer, 
       a.price_amount AS amount_deal,
       c1.name AS name_sale,
       c1.funding_total AS amount_invest,
       ROUND(a.price_amount/c1.funding_total) AS share_in
FROM acquisition AS a
LEFT OUTER JOIN company AS c ON a.acquiring_company_id = c.id
LEFT OUTER JOIN company AS c1 ON a.acquired_company_id = c1.id
WHERE a.price_amount > 0
AND c1.funding_total > 0
ORDER BY a.price_amount DESC,c1.name
LIMIT 10;

Задание 21

Выгрузите таблицу, в которую войдут названия компаний из категории social, получившие финансирование с 2010 по 2013 год включительно.
Проверьте, что сумма инвестиций не равна нулю. 
Выведите также номер месяца, в котором проходил раунд финансирования.

SELECT c.name AS social_c,
       EXTRACT(MONTH FROM CAST( funded_at AS date)) AS number_month
FROM company AS c
RIGHT OUTER JOIN funding_round AS fr ON c.id=fr.company_id
WHERE EXTRACT(YEAR  FROM CAST( funded_at AS date)) IN (2010,2011,2012,2013) AND 
raised_amount >0 AND c.category_code = 'social';

Задание 22


Отберите данные по месяцам с 2010 по 2013 год, когда проходили инвестиционные раунды. Сгруппируйте данные по номеру месяца и получите таблицу, в которой будут поля:
номер месяца, в котором проходили раунды;
количество уникальных названий фондов из США, которые инвестировали в этом месяце;
количество компаний, купленных за этот месяц;
общая сумма сделок по покупкам в этом месяце.

 WITH
s AS (SELECT EXTRACT(MONTH FROM CAST(funded_at AS date)) AS number_month,
     COUNT(DISTINCT f.name) AS count__fund
     FROM funding_round AS fr
     LEFT JOIN investment AS i ON i.funding_round_id = fr.id
     LEFT JOIN fund AS f ON i.fund_id = f.id
     WHERE EXTRACT(YEAR FROM CAST(funded_at AS date)) BETWEEN 2010 AND 2013
     AND f.country_code='USA'
     GROUP BY number_month),

r AS (SELECT EXTRACT(MONTH FROM CAST(acquired_at AS date)) AS number_month,
COUNT(acquiring_company_id) AS count_acquired,
SUM(price_amount) AS sum_price_amount
FROM acquisition
WHERE EXTRACT(YEAR FROM CAST(acquired_at AS date)) BETWEEN 2010 AND 2013
GROUP BY number_month)

SELECT s.number_month,
s.count__fund,
r.count_acquired,
r.sum_price_amount
FROM s
JOIN r ON s.number_month=r.number_month;
    
Задание 23

Составьте сводную таблицу и выведите среднюю сумму инвестиций для стран, в которых есть стартапы, зарегистрированные в 2011, 2012 и 2013 годах.
Данные за каждый год должны быть в отдельном поле. Отсортируйте таблицу по среднему значению инвестиций за 2011 год от большего к меньшему.

WITH 
i_2011 AS (SELECT country_code AS country,
           AVG(funding_total) AS y_2011
          FROM company AS c
          WHERE EXTRACT (YEAR FROM CAST(founded_at AS date)) = 2011
          GROUP BY country),
i_2012 AS (SELECT country_code AS country,
           AVG(funding_total) AS y_2012
          FROM company AS c
          WHERE EXTRACT (YEAR FROM CAST(founded_at AS date)) = 2012
          GROUP BY country),
i_2013 AS (SELECT country_code AS country,
           AVG(funding_total) AS y_2013
          FROM company AS c
          WHERE EXTRACT (YEAR FROM CAST(founded_at AS date)) = 2013
          GROUP BY country)  
SELECT i_2011.country,
       i_2011.y_2011,
       i_2012.y_2012,
       i_2013.y_2013
       FROM i_2011 
       JOIN i_2012 ON i_2011.country = i_2012.country
       JOIN i_2013 ON i_2012.country = i_2013.country
ORDER BY Y_2011 DESC;       












































